{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useState, useEffect } from 'react';\nimport { collection, query, where, getDocs, doc, updateDoc, orderBy, limit } from 'firebase/firestore';\nimport { firestore } from '../../firebase/firebaseConfig';\nimport authService from '../auth/authService';\nimport { useUserRole } from '../hooks/useUserRole';\nvar useReports = function useReports() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    reports = _useState2[0],\n    setReports = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    refreshTrigger = _useState8[0],\n    setRefreshTrigger = _useState8[1];\n  var _useUserRole = useUserRole(),\n    role = _useUserRole.role,\n    userCityId = _useUserRole.userCityId;\n  var user = authService.getCurrentUser();\n  var isAdmin = role === 'admin';\n  useEffect(function () {\n    var fetchReports = function () {\n      var _ref = _asyncToGenerator(function* () {\n        if (!isAdmin || !user) {\n          setReports([]);\n          setLoading(false);\n          return;\n        }\n        setLoading(true);\n        setError(null);\n        try {\n          var pendingReportsQuery = query(collection(firestore, 'reports'), where('status', '==', 'pending'), where('cityId', '==', userCityId), orderBy('reportedAt', 'desc'), limit(50));\n          var reportsSnapshot = yield getDocs(pendingReportsQuery);\n          var reportsData = [];\n          reportsSnapshot.forEach(function (doc) {\n            var _reportData$reportedA;\n            var reportData = doc.data();\n            reportsData.push({\n              id: doc.id,\n              type: reportData.type,\n              targetId: reportData.targetId,\n              reason: reportData.reason,\n              details: reportData.details,\n              reportedBy: reportData.reportedBy,\n              reportedAt: new Date(((_reportData$reportedA = reportData.reportedAt) == null ? void 0 : _reportData$reportedA.toDate()) || Date.now()),\n              status: reportData.status,\n              cityId: reportData.cityId,\n              contentSnapshot: reportData.contentSnapshot\n            });\n          });\n          for (var i = 0; i < reportsData.length; i++) {\n            var report = reportsData[i];\n            if (!report.contentSnapshot) {\n              try {\n                var contentRef = doc(firestore, report.type + 's', report.targetId);\n                var contentSnapshot = yield getDocs(contentRef);\n                if (contentSnapshot.exists()) {\n                  reportsData[i] = _objectSpread(_objectSpread({}, report), {}, {\n                    contentSnapshot: contentSnapshot.data()\n                  });\n                }\n              } catch (err) {\n                console.error(`Error fetching content for report ${report.id}:`, err);\n              }\n            }\n          }\n          setReports(reportsData);\n        } catch (err) {\n          console.error('Error fetching reports:', err);\n          setError('Failed to load reports. Please try again.');\n        } finally {\n          setLoading(false);\n        }\n      });\n      return function fetchReports() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchReports();\n  }, [isAdmin, user, userCityId, refreshTrigger]);\n  var resolveReport = function () {\n    var _ref2 = _asyncToGenerator(function* (report) {\n      if (!isAdmin || !user) return false;\n      try {\n        var reportRef = doc(firestore, 'reports', report.id);\n        yield updateDoc(reportRef, {\n          status: 'resolved',\n          resolvedAt: new Date(),\n          resolvedBy: user.uid\n        });\n        setReports(function (prev) {\n          return prev.filter(function (prevReport) {\n            return prevReport.id !== report.id;\n          });\n        });\n        return true;\n      } catch (err) {\n        console.error('Error resolving report:', err);\n        return false;\n      }\n    });\n    return function resolveReport(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var dismissReport = function () {\n    var _ref3 = _asyncToGenerator(function* (report) {\n      if (!isAdmin || !user) return false;\n      try {\n        var reportRef = doc(firestore, 'reports', report.id);\n        yield updateDoc(reportRef, {\n          status: 'dismissed',\n          resolvedAt: new Date(),\n          resolvedBy: user.uid\n        });\n        setReports(function (prev) {\n          return prev.filter(function (prevReport) {\n            return prevReport.id !== report.id;\n          });\n        });\n        return true;\n      } catch (err) {\n        console.error('Error dismissing report:', err);\n        return false;\n      }\n    });\n    return function dismissReport(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var refresh = function refresh() {\n    setRefreshTrigger(function (prev) {\n      return prev + 1;\n    });\n  };\n  return {\n    reports: reports,\n    loading: loading,\n    error: error,\n    resolveReport: resolveReport,\n    dismissReport: dismissReport,\n    refresh: refresh\n  };\n};\nexport default useReports;","map":{"version":3,"names":["useState","useEffect","collection","query","where","getDocs","doc","updateDoc","orderBy","limit","firestore","authService","useUserRole","useReports","_useState","_useState2","_slicedToArray","reports","setReports","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","_useState7","_useState8","refreshTrigger","setRefreshTrigger","_useUserRole","role","userCityId","user","getCurrentUser","isAdmin","fetchReports","_ref","_asyncToGenerator","pendingReportsQuery","reportsSnapshot","reportsData","forEach","_reportData$reportedA","reportData","data","push","id","type","targetId","reason","details","reportedBy","reportedAt","Date","toDate","now","status","cityId","contentSnapshot","i","length","report","contentRef","exists","_objectSpread","err","console","apply","arguments","resolveReport","_ref2","reportRef","resolvedAt","resolvedBy","uid","prev","filter","prevReport","_x","dismissReport","_ref3","_x2","refresh"],"sources":["/Users/brianwilliams/Documents/GitHub/Kinza/src/hooks/useReports.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { collection, query, where, getDocs, doc, updateDoc, orderBy, limit } from 'firebase/firestore';\nimport { firestore } from '../../firebase/firebaseConfig';\nimport authService from '../auth/authService';\nimport { useUserRole } from '../hooks/useUserRole';\n\n// Types for reports\nexport interface Report {\n  id: string;\n  type: 'event' | 'comment' | 'profile';\n  targetId: string;\n  reason: string;\n  details: string;\n  reportedBy: string;\n  reportedAt: Date;\n  status: 'pending' | 'resolved' | 'dismissed';\n  cityId: string;\n  contentSnapshot?: any;\n}\n\ninterface UseReportsResult {\n  reports: Report[];\n  loading: boolean;\n  error: string | null;\n  resolveReport: (report: Report) => Promise<boolean>;\n  dismissReport: (report: Report) => Promise<boolean>;\n  refresh: () => void;\n}\n\n/**\n * Custom hook for handling content reports\n */\nconst useReports = (): UseReportsResult => {\n  const [reports, setReports] = useState<Report[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\n  \n  const { role, userCityId } = useUserRole();\n  const user = authService.getCurrentUser();\n\n  // Check if user has admin permissions\n  const isAdmin = role === 'admin';\n\n  useEffect(() => {\n    const fetchReports = async () => {\n      if (!isAdmin || !user) {\n        setReports([]);\n        setLoading(false);\n        return;\n      }\n\n      setLoading(true);\n      setError(null);\n\n      try {\n        // Fetch pending reports for the admin's city\n        const pendingReportsQuery = query(\n          collection(firestore, 'reports'),\n          where('status', '==', 'pending'),\n          where('cityId', '==', userCityId),\n          orderBy('reportedAt', 'desc'),\n          limit(50)\n        );\n        \n        const reportsSnapshot = await getDocs(pendingReportsQuery);\n        const reportsData: Report[] = [];\n        \n        reportsSnapshot.forEach((doc) => {\n          const reportData = doc.data();\n          reportsData.push({\n            id: doc.id,\n            type: reportData.type,\n            targetId: reportData.targetId,\n            reason: reportData.reason,\n            details: reportData.details,\n            reportedBy: reportData.reportedBy,\n            reportedAt: new Date(reportData.reportedAt?.toDate() || Date.now()),\n            status: reportData.status,\n            cityId: reportData.cityId,\n            contentSnapshot: reportData.contentSnapshot,\n          });\n        });\n        \n        // Fetch content details for each report if not already included in snapshot\n        for (let i = 0; i < reportsData.length; i++) {\n          const report = reportsData[i];\n          \n          if (!report.contentSnapshot) {\n            try {\n              const contentRef = doc(firestore, report.type + 's', report.targetId);\n              const contentSnapshot = await getDocs(contentRef);\n              \n              if (contentSnapshot.exists()) {\n                reportsData[i] = {\n                  ...report,\n                  contentSnapshot: contentSnapshot.data(),\n                };\n              }\n            } catch (err) {\n              console.error(`Error fetching content for report ${report.id}:`, err);\n            }\n          }\n        }\n        \n        setReports(reportsData);\n      } catch (err) {\n        console.error('Error fetching reports:', err);\n        setError('Failed to load reports. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchReports();\n  }, [isAdmin, user, userCityId, refreshTrigger]);\n\n  // Resolve a report\n  const resolveReport = async (report: Report): Promise<boolean> => {\n    if (!isAdmin || !user) return false;\n\n    try {\n      const reportRef = doc(firestore, 'reports', report.id);\n      \n      await updateDoc(reportRef, {\n        status: 'resolved',\n        resolvedAt: new Date(),\n        resolvedBy: user.uid,\n      });\n      \n      // Update local state\n      setReports((prev) =>\n        prev.filter((prevReport) => prevReport.id !== report.id)\n      );\n      \n      return true;\n    } catch (err) {\n      console.error('Error resolving report:', err);\n      return false;\n    }\n  };\n\n  // Dismiss a report\n  const dismissReport = async (report: Report): Promise<boolean> => {\n    if (!isAdmin || !user) return false;\n\n    try {\n      const reportRef = doc(firestore, 'reports', report.id);\n      \n      await updateDoc(reportRef, {\n        status: 'dismissed',\n        resolvedAt: new Date(),\n        resolvedBy: user.uid,\n      });\n      \n      // Update local state\n      setReports((prev) =>\n        prev.filter((prevReport) => prevReport.id !== report.id)\n      );\n      \n      return true;\n    } catch (err) {\n      console.error('Error dismissing report:', err);\n      return false;\n    }\n  };\n\n  // Function to trigger a refresh\n  const refresh = () => {\n    setRefreshTrigger((prev) => prev + 1);\n  };\n\n  return {\n    reports,\n    loading,\n    error,\n    resolveReport,\n    dismissReport,\n    refresh,\n  };\n};\n\nexport default useReports;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}