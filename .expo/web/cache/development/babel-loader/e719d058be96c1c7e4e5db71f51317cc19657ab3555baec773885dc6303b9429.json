{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useState, useEffect, useCallback } from 'react';\nimport { collection, query, where, getDocs, orderBy } from 'firebase/firestore';\nimport { firestore } from '../../firebase/firebaseConfig';\nimport authService from '../auth/authService';\nimport { useApiWithRetry } from './common/useApiWithRetry';\nvar useOrganiserEvents = function useOrganiserEvents() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    events = _useState2[0],\n    setEvents = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    refreshTrigger = _useState8[0],\n    setRefreshTrigger = _useState8[1];\n  var _useState9 = useState({\n      total: 0,\n      pending: 0,\n      approved: 0,\n      rejected: 0,\n      views: 0,\n      saves: 0\n    }),\n    _useState0 = _slicedToArray(_useState9, 2),\n    stats = _useState0[0],\n    setStats = _useState0[1];\n  var fetchOrganiserEventsApiCall = useCallback(_asyncToGenerator(function* () {\n    var user = authService.getCurrentUser();\n    if (!user) {\n      throw new Error('User not authenticated');\n    }\n    var eventsQuery = query(collection(firestore, 'events'), where('organiser.id', '==', user.uid), orderBy('createdAt', 'desc'));\n    var eventsSnapshot = yield getDocs(eventsQuery);\n    var eventsData = [];\n    var totalViews = 0;\n    var totalSaves = 0;\n    var pendingCount = 0;\n    var approvedCount = 0;\n    var rejectedCount = 0;\n    eventsSnapshot.forEach(function (doc) {\n      var eventData = doc.data();\n      var statusInfo = getStatusInfo(eventData.status || 'pending');\n      var eventWithStatus = _objectSpread(_objectSpread({}, eventData), {}, {\n        id: doc.id,\n        statusLabel: statusInfo.label,\n        statusColor: statusInfo.color\n      });\n      eventsData.push(eventWithStatus);\n      totalViews += eventData.views || 0;\n      totalSaves += eventData.saves || 0;\n      if (eventData.status === 'pending') pendingCount++;else if (eventData.status === 'approved') approvedCount++;else if (eventData.status === 'rejected') rejectedCount++;\n    });\n    var statsData = {\n      total: eventsSnapshot.size,\n      pending: pendingCount,\n      approved: approvedCount,\n      rejected: rejectedCount,\n      views: totalViews,\n      saves: totalSaves\n    };\n    return {\n      events: eventsData,\n      stats: statsData\n    };\n  }), [refreshTrigger]);\n  var _useApiWithRetry = useApiWithRetry(fetchOrganiserEventsApiCall, {\n      maxRetries: 3,\n      baseDelay: 1000\n    }),\n    fetchOrganiserEventsWithRetry = _useApiWithRetry.execute,\n    isRetrying = _useApiWithRetry.isRetrying;\n  useEffect(function () {\n    var fetchOrganiserEvents = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        setLoading(true);\n        setError(null);\n        try {\n          var result = yield fetchOrganiserEventsWithRetry();\n          setEvents(result.events);\n          setStats(result.stats);\n        } catch (err) {\n          console.error('Error fetching organiser events:', err);\n          if (err instanceof Error && err.message === 'User not authenticated') {\n            setEvents([]);\n            setError('User not authenticated');\n          } else {\n            setError('Failed to load events. Please try again.');\n          }\n        } finally {\n          setLoading(false);\n        }\n      });\n      return function fetchOrganiserEvents() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchOrganiserEvents();\n  }, [fetchOrganiserEventsWithRetry]);\n  var getStatusInfo = function getStatusInfo(status) {\n    switch (status) {\n      case 'pending':\n        return {\n          label: 'Pending',\n          color: '#FF9800'\n        };\n      case 'approved':\n        return {\n          label: 'Approved',\n          color: '#4CAF50'\n        };\n      case 'rejected':\n        return {\n          label: 'Rejected',\n          color: '#F44336'\n        };\n      default:\n        return {\n          label: 'Unknown',\n          color: '#9E9E9E'\n        };\n    }\n  };\n  var refresh = function refresh() {\n    setRefreshTrigger(function (prev) {\n      return prev + 1;\n    });\n  };\n  return {\n    events: events,\n    loading: loading || isRetrying,\n    error: error,\n    refresh: refresh,\n    stats: stats\n  };\n};\nexport default useOrganiserEvents;","map":{"version":3,"names":["useState","useEffect","useCallback","collection","query","where","getDocs","orderBy","firestore","authService","useApiWithRetry","useOrganiserEvents","_useState","_useState2","_slicedToArray","events","setEvents","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","_useState7","_useState8","refreshTrigger","setRefreshTrigger","_useState9","total","pending","approved","rejected","views","saves","_useState0","stats","setStats","fetchOrganiserEventsApiCall","_asyncToGenerator","user","getCurrentUser","Error","eventsQuery","uid","eventsSnapshot","eventsData","totalViews","totalSaves","pendingCount","approvedCount","rejectedCount","forEach","doc","eventData","data","statusInfo","getStatusInfo","status","eventWithStatus","_objectSpread","id","statusLabel","label","statusColor","color","push","statsData","size","_useApiWithRetry","maxRetries","baseDelay","fetchOrganiserEventsWithRetry","execute","isRetrying","fetchOrganiserEvents","_ref2","result","err","console","message","apply","arguments","refresh","prev"],"sources":["/Users/brianwilliams/Documents/GitHub/Kinza/src/hooks/useOrganiserEvents.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { collection, query, where, getDocs, orderBy } from 'firebase/firestore';\nimport { firestore } from '../../firebase/firebaseConfig';\nimport { Event } from '../types/events';\nimport authService from '../auth/authService';\nimport { useApiWithRetry } from './common/useApiWithRetry';\n\ninterface EventWithStatus extends Event {\n  statusLabel: string;\n  statusColor: string;\n}\n\ninterface UseOrganiserEventsResult {\n  events: EventWithStatus[];\n  loading: boolean;\n  error: string | null;\n  refresh: () => void;\n  stats: {\n    total: number;\n    pending: number;\n    approved: number;\n    rejected: number;\n    views: number;\n    saves: number;\n  };\n}\n\n/**\n * Custom hook to fetch events created by the current organiser\n */\nconst useOrganiserEvents = (): UseOrganiserEventsResult => {\n  const [events, setEvents] = useState<EventWithStatus[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\n  const [stats, setStats] = useState({\n    total: 0,\n    pending: 0,\n    approved: 0,\n    rejected: 0,\n    views: 0,\n    saves: 0,\n  });\n\n  // Create API call function for retry logic\n  const fetchOrganiserEventsApiCall = useCallback(async () => {\n    const user = authService.getCurrentUser();\n    \n    if (!user) {\n      throw new Error('User not authenticated');\n    }\n\n    // Query events created by the current user\n    const eventsQuery = query(\n      collection(firestore, 'events'),\n      where('organiser.id', '==', user.uid),\n      orderBy('createdAt', 'desc')\n    );\n    \n    const eventsSnapshot = await getDocs(eventsQuery);\n    const eventsData: EventWithStatus[] = [];\n    \n    let totalViews = 0;\n    let totalSaves = 0;\n    let pendingCount = 0;\n    let approvedCount = 0;\n    let rejectedCount = 0;\n    \n    eventsSnapshot.forEach((doc) => {\n      const eventData = doc.data() as Event;\n      const statusInfo = getStatusInfo(eventData.status || 'pending');\n      \n      // Add status label and color\n      const eventWithStatus: EventWithStatus = {\n        ...eventData,\n        id: doc.id,\n        statusLabel: statusInfo.label,\n        statusColor: statusInfo.color,\n      };\n      \n      eventsData.push(eventWithStatus);\n      \n      // Update stats\n      totalViews += eventData.views || 0;\n      totalSaves += eventData.saves || 0;\n      \n      if (eventData.status === 'pending') pendingCount++;\n      else if (eventData.status === 'approved') approvedCount++;\n      else if (eventData.status === 'rejected') rejectedCount++;\n    });\n    \n    const statsData = {\n      total: eventsSnapshot.size,\n      pending: pendingCount,\n      approved: approvedCount,\n      rejected: rejectedCount,\n      views: totalViews,\n      saves: totalSaves,\n    };\n    \n    return { events: eventsData, stats: statsData };\n  }, [refreshTrigger]);\n\n  // Use retry-enabled API call for fetching organiser events\n  const { execute: fetchOrganiserEventsWithRetry, isRetrying } = useApiWithRetry(\n    fetchOrganiserEventsApiCall,\n    {\n      maxRetries: 3,\n      baseDelay: 1000,\n    }\n  );\n\n  useEffect(() => {\n    const fetchOrganiserEvents = async () => {\n      setLoading(true);\n      setError(null);\n\n      try {\n        const result = await fetchOrganiserEventsWithRetry();\n        setEvents(result.events);\n        setStats(result.stats);\n      } catch (err) {\n        console.error('Error fetching organiser events:', err);\n        if (err instanceof Error && err.message === 'User not authenticated') {\n          setEvents([]);\n          setError('User not authenticated');\n        } else {\n          setError('Failed to load events. Please try again.');\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchOrganiserEvents();\n  }, [fetchOrganiserEventsWithRetry]);\n\n  // Get status label and color\n  const getStatusInfo = (status: string) => {\n    switch (status) {\n      case 'pending':\n        return { label: 'Pending', color: '#FF9800' };\n      case 'approved':\n        return { label: 'Approved', color: '#4CAF50' };\n      case 'rejected':\n        return { label: 'Rejected', color: '#F44336' };\n      default:\n        return { label: 'Unknown', color: '#9E9E9E' };\n    }\n  };\n\n  // Function to trigger a refresh\n  const refresh = () => {\n    setRefreshTrigger((prev) => prev + 1);\n  };\n\n  return {\n    events,\n    loading: loading || isRetrying,\n    error,\n    refresh,\n    stats,\n  };\n};\n\nexport default useOrganiserEvents;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}