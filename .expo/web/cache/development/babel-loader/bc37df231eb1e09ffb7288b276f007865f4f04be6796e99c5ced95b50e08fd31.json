{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nexport var withStyleFallback = function withStyleFallback(styles) {\n  var fallbacks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var validStyles = styles.filter(function (style) {\n    return style !== undefined && style !== null;\n  });\n  if (validStyles.length === 0) {\n    return fallbacks;\n  }\n  return [fallbacks].concat(_toConsumableArray(validStyles));\n};\nexport var withThemeFallback = function withThemeFallback(themeValue, fallbackValue) {\n  return themeValue !== undefined ? themeValue : fallbackValue;\n};\nexport var withFontFallback = function withFontFallback(fontFamily) {\n  if (!fontFamily) {\n    return Platform.OS === 'ios' ? 'System' : 'Roboto';\n  }\n  return fontFamily;\n};\nexport var withColorFallback = function withColorFallback(color) {\n  var fallbackColor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '#000000';\n  return color || fallbackColor;\n};\nimport Platform from \"react-native-web/dist/exports/Platform\";","map":{"version":3,"names":["withStyleFallback","styles","fallbacks","arguments","length","undefined","validStyles","filter","style","concat","_toConsumableArray","withThemeFallback","themeValue","fallbackValue","withFontFallback","fontFamily","Platform","OS","withColorFallback","color","fallbackColor"],"sources":["/Users/brianwilliams/Documents/GitHub/Kinza/src/utils/styleUtils.ts"],"sourcesContent":["/**\n * Style utilities for graceful fallbacks and immediate UI updates\n */\n\n/**\n * Safely applies styles with fallbacks for undefined values\n * @param styles - Array of style objects\n * @param fallbacks - Fallback style object\n * @returns Combined style object with fallbacks applied\n */\nexport const withStyleFallback = (styles: any[], fallbacks: any = {}) => {\n  // Filter out undefined or null styles\n  const validStyles = styles.filter(style => style !== undefined && style !== null);\n  \n  // If no valid styles, return fallbacks\n  if (validStyles.length === 0) {\n    return fallbacks;\n  }\n  \n  // Merge all valid styles with fallbacks as base\n  return [fallbacks, ...validStyles];\n};\n\n/**\n * Safely applies a theme property with fallback\n * @param themeValue - Theme value that might be undefined\n * @param fallbackValue - Fallback value\n * @returns Theme value or fallback\n */\nexport const withThemeFallback = <T>(themeValue: T | undefined, fallbackValue: T): T => {\n  return themeValue !== undefined ? themeValue : fallbackValue;\n};\n\n/**\n * Safely applies a font family with fallback\n * @param fontFamily - Font family that might be undefined\n * @returns Font family or system font fallback\n */\nexport const withFontFallback = (fontFamily: string | undefined): string => {\n  if (!fontFamily) {\n    // System font fallbacks\n    return Platform.OS === 'ios' ? 'System' : 'Roboto';\n  }\n  return fontFamily;\n};\n\n/**\n * Safely applies a color with fallback\n * @param color - Color that might be undefined\n * @param fallbackColor - Fallback color\n * @returns Color or fallback\n */\nexport const withColorFallback = (color: string | undefined, fallbackColor: string = '#000000'): string => {\n  return color || fallbackColor;\n};\n\n// Export a Platform import for the withFontFallback function\nimport { Platform } from 'react-native';\n"],"mappings":";AAUA,OAAO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,MAAa,EAA0B;EAAA,IAAxBC,SAAc,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAElE,IAAMG,WAAW,GAAGL,MAAM,CAACM,MAAM,CAAC,UAAAC,KAAK;IAAA,OAAIA,KAAK,KAAKH,SAAS,IAAIG,KAAK,KAAK,IAAI;EAAA,EAAC;EAGjF,IAAIF,WAAW,CAACF,MAAM,KAAK,CAAC,EAAE;IAC5B,OAAOF,SAAS;EAClB;EAGA,QAAQA,SAAS,EAAAO,MAAA,CAAAC,kBAAA,CAAKJ,WAAW;AACnC,CAAC;AAQD,OAAO,IAAMK,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAOC,UAAyB,EAAEC,aAAgB,EAAQ;EACtF,OAAOD,UAAU,KAAKP,SAAS,GAAGO,UAAU,GAAGC,aAAa;AAC9D,CAAC;AAOD,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,UAA8B,EAAa;EAC1E,IAAI,CAACA,UAAU,EAAE;IAEf,OAAOC,QAAQ,CAACC,EAAE,KAAK,KAAK,GAAG,QAAQ,GAAG,QAAQ;EACpD;EACA,OAAOF,UAAU;AACnB,CAAC;AAQD,OAAO,IAAMG,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,KAAyB,EAAgD;EAAA,IAA9CC,aAAqB,GAAAjB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,SAAS;EAC5F,OAAOgB,KAAK,IAAIC,aAAa;AAC/B,CAAC;AAAC,OAAAJ,QAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}