{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar _jsxFileName = \"/Users/brianwilliams/Documents/GitHub/Kinza/src/components/ScreenshotButton.tsx\",\n  _this = this;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useRef } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { useScreenshot } from '../utils/screenshot';\nimport theme from '../styles/theme';\nimport useFocusState from '../hooks/useFocusState';\nimport { withStyleFallback } from '../utils/styleUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var ScreenshotButton = function ScreenshotButton(_ref) {\n  var _ref$title = _ref.title,\n    title = _ref$title === void 0 ? 'Save Screenshot' : _ref$title,\n    style = _ref.style;\n  var _useScreenshot = useScreenshot(),\n    saveScreenshotToDesktop = _useScreenshot.saveScreenshotToDesktop;\n  var scaleAnim = useRef(new Animated.Value(1)).current;\n  var _useFocusState = useFocusState(),\n    focusHandlers = _useFocusState.focusHandlers,\n    focusStyles = _useFocusState.focusStyles;\n  var animateScale = function animateScale() {\n    Animated.sequence([Animated.timing(scaleAnim, {\n      toValue: 0.95,\n      duration: 100,\n      useNativeDriver: true\n    }), Animated.spring(scaleAnim, {\n      toValue: 1,\n      friction: 4,\n      tension: 40,\n      useNativeDriver: true\n    })]).start();\n  };\n  var handleScreenshot = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        if (Platform.OS === 'macos') {\n          var result = yield saveScreenshotToDesktop();\n          if (result.success) {\n            Alert.alert('Screenshot Instructions', 'Instructions saved to your desktop. Press Command (⌘) + Shift + 4 to capture a screenshot on your Mac.');\n          } else {\n            Alert.alert('Error', 'Failed to save screenshot instructions.');\n          }\n        } else {\n          Alert.alert('Screenshot Tip', Platform.OS === 'ios' ? 'Press the Side button and Volume Up button at the same time to take a screenshot.' : 'Press Power + Volume Down buttons simultaneously to take a screenshot.');\n        }\n      } catch (error) {\n        console.error('Screenshot error:', error);\n        Alert.alert('Error', 'Failed to take screenshot');\n      }\n    });\n    return function handleScreenshot() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxDEV(Animated.View, {\n    style: {\n      transform: [{\n        scale: scaleAnim\n      }]\n    },\n    children: _jsxDEV(TouchableOpacity, _objectSpread(_objectSpread({\n      style: withStyleFallback([styles.button, style, focusStyles], {\n        backgroundColor: '#E06B8B',\n        borderRadius: 16,\n        padding: 12,\n        flexDirection: 'row',\n        alignItems: 'center',\n        minHeight: 44\n      }),\n      onPress: function onPress() {\n        animateScale();\n        handleScreenshot();\n      },\n      accessibilityLabel: \"Take screenshot\",\n      accessibilityHint: \"Saves a screenshot to your desktop\",\n      accessible: true,\n      accessibilityRole: \"button\"\n    }, focusHandlers), {}, {\n      children: [_jsxDEV(Ionicons, {\n        name: \"camera-outline\",\n        size: 20,\n        color: theme.colors.text.inverse,\n        style: styles.icon,\n        \"aria-label\": \"Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, _this), _jsxDEV(Text, {\n        style: styles.text,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, _this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  button: _objectSpread({\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.primary,\n    paddingVertical: theme.spacing[2],\n    paddingHorizontal: theme.spacing[4],\n    borderRadius: theme.borders.radius.xl,\n    minHeight: theme.layout.touchableMinHeight\n  }, theme.shadows.md),\n  icon: {\n    marginRight: theme.spacing[2]\n  },\n  text: {\n    color: theme.colors.text.inverse,\n    fontFamily: theme.typography.fontFamily.heading,\n    fontSize: theme.typography.fontSize.base\n  }\n});\nexport default ScreenshotButton;","map":{"version":3,"names":["React","useRef","TouchableOpacity","Text","StyleSheet","Alert","Platform","Animated","Ionicons","useScreenshot","theme","useFocusState","withStyleFallback","jsxDEV","_jsxDEV","ScreenshotButton","_ref","_ref$title","title","style","_useScreenshot","saveScreenshotToDesktop","scaleAnim","Value","current","_useFocusState","focusHandlers","focusStyles","animateScale","sequence","timing","toValue","duration","useNativeDriver","spring","friction","tension","start","handleScreenshot","_ref2","_asyncToGenerator","OS","result","success","alert","error","console","apply","arguments","View","transform","scale","children","_objectSpread","styles","button","backgroundColor","borderRadius","padding","flexDirection","alignItems","minHeight","onPress","accessibilityLabel","accessibilityHint","accessible","accessibilityRole","name","size","color","colors","text","inverse","icon","fileName","_jsxFileName","lineNumber","columnNumber","_this","create","primary","paddingVertical","spacing","paddingHorizontal","borders","radius","xl","layout","touchableMinHeight","shadows","md","marginRight","fontFamily","typography","heading","fontSize","base"],"sources":["/Users/brianwilliams/Documents/GitHub/Kinza/src/components/ScreenshotButton.tsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport { TouchableOpacity, Text, StyleSheet, Alert, Platform, Animated } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useScreenshot } from '../utils/screenshot';\nimport theme from '../styles/theme';\nimport useFocusState from '../hooks/useFocusState';\nimport { withStyleFallback, withColorFallback, withFontFallback } from '../utils/styleUtils';\n\ninterface ScreenshotButtonProps {\n  title?: string;\n  style?: any;\n}\n\n/**\n * A button component that helps users take screenshots and save them to desktop\n */\nexport const ScreenshotButton: React.FC<ScreenshotButtonProps> = ({ \n  title = 'Save Screenshot', \n  style \n}) => {\n  const { saveScreenshotToDesktop } = useScreenshot();\n  const scaleAnim = useRef(new Animated.Value(1)).current;\n  const { focusHandlers, focusStyles } = useFocusState();\n  \n  // Bounce animation for button press\n  const animateScale = () => {\n    Animated.sequence([\n      Animated.timing(scaleAnim, {\n        toValue: 0.95,\n        duration: 100,\n        useNativeDriver: true\n      }),\n      Animated.spring(scaleAnim, {\n        toValue: 1,\n        friction: 4,\n        tension: 40,\n        useNativeDriver: true\n      })\n    ]).start();\n  };\n\n  const handleScreenshot = async () => {\n    try {\n      if (Platform.OS === 'macos') {\n        // On macOS, we'll save instructions for using the built-in screenshot tool\n        const result = await saveScreenshotToDesktop();\n        \n        if (result.success) {\n          Alert.alert(\n            'Screenshot Instructions',\n            'Instructions saved to your desktop. Press Command (⌘) + Shift + 4 to capture a screenshot on your Mac.'\n          );\n        } else {\n          Alert.alert('Error', 'Failed to save screenshot instructions.');\n        }\n      } else {\n        Alert.alert(\n          'Screenshot Tip',\n          Platform.OS === 'ios' \n            ? 'Press the Side button and Volume Up button at the same time to take a screenshot.'\n            : 'Press Power + Volume Down buttons simultaneously to take a screenshot.'\n        );\n      }\n    } catch (error) {\n      console.error('Screenshot error:', error);\n      Alert.alert('Error', 'Failed to take screenshot');\n    }\n  };\n\n  return (\n    <Animated.View style={{ transform: [{ scale: scaleAnim }] }}>\n      <TouchableOpacity \n        style={withStyleFallback([styles.button, style, focusStyles], { \n          backgroundColor: '#E06B8B', // Fallback to our primary color\n          borderRadius: 16,\n          padding: 12,\n          flexDirection: 'row',\n          alignItems: 'center',\n          minHeight: 44\n        })} \n        onPress={() => {\n          animateScale();\n          handleScreenshot();\n        }}\n        accessibilityLabel=\"Take screenshot\"\n        accessibilityHint=\"Saves a screenshot to your desktop\"\n        accessible={true}\n        accessibilityRole=\"button\"\n        {...focusHandlers}\n      >\n        <Ionicons name=\"camera-outline\" size={20} color={theme.colors.text.inverse} style={styles.icon} aria-label=\"Camera\" />\n        <Text style={styles.text}>{title}</Text>\n      </TouchableOpacity>\n    </Animated.View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.primary,\n    paddingVertical: theme.spacing[2],\n    paddingHorizontal: theme.spacing[4],\n    borderRadius: theme.borders.radius.xl, // 16px corner radius per requirements\n    minHeight: theme.layout.touchableMinHeight, // Ensure 44px minimum height for accessibility\n    ...theme.shadows.md, // Add soft shadow per requirements\n  },\n  icon: {\n    marginRight: theme.spacing[2],\n  },\n  text: {\n    color: theme.colors.text.inverse,\n    fontFamily: theme.typography.fontFamily.heading, // Poppins bold for buttons per requirements\n    fontSize: theme.typography.fontSize.base, // 16px for text per requirements\n  },\n});\n\nexport default ScreenshotButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}