{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nexport var UserRole = function (UserRole) {\n  UserRole[\"PARENT\"] = \"parent\";\n  UserRole[\"ORGANISER\"] = \"organiser\";\n  UserRole[\"ADMIN\"] = \"admin\";\n  UserRole[\"GUEST\"] = \"guest\";\n  UserRole[\"PARTNER\"] = \"partner\";\n  return UserRole;\n}({});\nexport var roleDescriptions = _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, UserRole.PARENT, 'Registered family user seeking age-appropriate events and activities for their children'), UserRole.ORGANISER, 'Individual or small organization that creates and hosts community events for families'), UserRole.ADMIN, 'Kinza team members and moderators responsible for platform governance and safety'), UserRole.GUEST, 'Unregistered user with read-only access to public content'), UserRole.PARTNER, 'Commercial businesses and venues that promote kid-friendly services and host events');\nexport var Permission = function (Permission) {\n  Permission[\"VIEW_EVENTS\"] = \"view_events\";\n  Permission[\"CREATE_EVENT\"] = \"create_event\";\n  Permission[\"EDIT_EVENT\"] = \"edit_event\";\n  Permission[\"DELETE_EVENT\"] = \"delete_event\";\n  Permission[\"COMMENT\"] = \"comment\";\n  Permission[\"SAVE_EVENT\"] = \"save_event\";\n  Permission[\"MODERATE_CONTENT\"] = \"moderate_content\";\n  Permission[\"MANAGE_USERS\"] = \"manage_users\";\n  Permission[\"VIEW_ANALYTICS\"] = \"view_analytics\";\n  Permission[\"EDIT_PROFILE\"] = \"edit_profile\";\n  Permission[\"VIEW_FULL_MAP\"] = \"view_full_map\";\n  Permission[\"VIEW_LIMITED_MAP\"] = \"view_limited_map\";\n  return Permission;\n}({});\nexport var rolePermissions = _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, UserRole.PARENT, [Permission.VIEW_EVENTS, Permission.COMMENT, Permission.SAVE_EVENT, Permission.EDIT_PROFILE, Permission.VIEW_FULL_MAP]), UserRole.ORGANISER, [Permission.VIEW_EVENTS, Permission.CREATE_EVENT, Permission.EDIT_EVENT, Permission.COMMENT, Permission.SAVE_EVENT, Permission.VIEW_ANALYTICS, Permission.EDIT_PROFILE, Permission.VIEW_FULL_MAP]), UserRole.ADMIN, [Permission.VIEW_EVENTS, Permission.CREATE_EVENT, Permission.EDIT_EVENT, Permission.DELETE_EVENT, Permission.COMMENT, Permission.SAVE_EVENT, Permission.MODERATE_CONTENT, Permission.MANAGE_USERS, Permission.VIEW_ANALYTICS, Permission.EDIT_PROFILE, Permission.VIEW_FULL_MAP, Permission.VIEW_LIMITED_MAP]), UserRole.GUEST, [Permission.VIEW_EVENTS, Permission.VIEW_LIMITED_MAP]), UserRole.PARTNER, [Permission.VIEW_EVENTS, Permission.CREATE_EVENT, Permission.EDIT_EVENT, Permission.COMMENT, Permission.SAVE_EVENT, Permission.VIEW_ANALYTICS, Permission.EDIT_PROFILE, Permission.VIEW_FULL_MAP]);\nexport var hasPermission = function hasPermission(userRole, permission) {\n  var _rolePermissions$user;\n  return ((_rolePermissions$user = rolePermissions[userRole]) == null ? void 0 : _rolePermissions$user.includes(permission)) || false;\n};\nexport var getPermissionsForRole = function getPermissionsForRole(role) {\n  return rolePermissions[role] || [];\n};\nexport var screenAccessControl = {\n  AdminDashboard: [UserRole.ADMIN],\n  ReportReview: [UserRole.ADMIN],\n  ModerationQueue: [UserRole.ADMIN],\n  OrganiserDashboard: [UserRole.ORGANISER, UserRole.ADMIN],\n  Privacy: [UserRole.PARENT, UserRole.ORGANISER, UserRole.ADMIN, UserRole.PARTNER],\n  SubmitEvent: [UserRole.ORGANISER, UserRole.ADMIN, UserRole.PARTNER],\n  Home: Object.values(UserRole),\n  Search: Object.values(UserRole),\n  Map: Object.values(UserRole),\n  EventDetail: Object.values(UserRole),\n  Profile: [UserRole.PARENT, UserRole.ORGANISER, UserRole.ADMIN, UserRole.PARTNER],\n  SavedEvents: [UserRole.PARENT, UserRole.ORGANISER, UserRole.ADMIN, UserRole.PARTNER],\n  Comments: [UserRole.PARENT, UserRole.ORGANISER, UserRole.ADMIN, UserRole.PARTNER]\n};\nexport var canAccessScreen = function canAccessScreen(userRole, screenName) {\n  var allowedRoles = screenAccessControl[screenName];\n  return allowedRoles ? allowedRoles.includes(userRole) : false;\n};","map":{"version":3,"names":["UserRole","roleDescriptions","_defineProperty","PARENT","ORGANISER","ADMIN","GUEST","PARTNER","Permission","rolePermissions","VIEW_EVENTS","COMMENT","SAVE_EVENT","EDIT_PROFILE","VIEW_FULL_MAP","CREATE_EVENT","EDIT_EVENT","VIEW_ANALYTICS","DELETE_EVENT","MODERATE_CONTENT","MANAGE_USERS","VIEW_LIMITED_MAP","hasPermission","userRole","permission","_rolePermissions$user","includes","getPermissionsForRole","role","screenAccessControl","AdminDashboard","ReportReview","ModerationQueue","OrganiserDashboard","Privacy","SubmitEvent","Home","Object","values","Search","Map","EventDetail","Profile","SavedEvents","Comments","canAccessScreen","screenName","allowedRoles"],"sources":["/Users/brianwilliams/Documents/GitHub/Kinza/src/auth/roles.ts"],"sourcesContent":["// Role definitions and access control for Kinza Berlin app\n\n/**\n * User role types\n */\nexport enum UserRole {\n  PARENT = 'parent',\n  ORGANISER = 'organiser',\n  ADMIN = 'admin',\n  GUEST = 'guest',\n  PARTNER = 'partner'\n}\n\n/**\n * Role descriptions\n */\nexport const roleDescriptions = {\n  [UserRole.PARENT]: 'Registered family user seeking age-appropriate events and activities for their children',\n  [UserRole.ORGANISER]: 'Individual or small organization that creates and hosts community events for families',\n  [UserRole.ADMIN]: 'Kinza team members and moderators responsible for platform governance and safety',\n  [UserRole.GUEST]: 'Unregistered user with read-only access to public content',\n  [UserRole.PARTNER]: 'Commercial businesses and venues that promote kid-friendly services and host events'\n};\n\n/**\n * Permission types\n */\nexport enum Permission {\n  VIEW_EVENTS = 'view_events',\n  CREATE_EVENT = 'create_event',\n  EDIT_EVENT = 'edit_event',\n  DELETE_EVENT = 'delete_event',\n  COMMENT = 'comment',\n  SAVE_EVENT = 'save_event',\n  MODERATE_CONTENT = 'moderate_content',\n  MANAGE_USERS = 'manage_users',\n  VIEW_ANALYTICS = 'view_analytics',\n  EDIT_PROFILE = 'edit_profile',\n  VIEW_FULL_MAP = 'view_full_map',\n  VIEW_LIMITED_MAP = 'view_limited_map'\n}\n\n/**\n * Role-based permissions mapping\n */\nexport const rolePermissions: Record<UserRole, Permission[]> = {\n  [UserRole.PARENT]: [\n    Permission.VIEW_EVENTS,\n    Permission.COMMENT,\n    Permission.SAVE_EVENT,\n    Permission.EDIT_PROFILE,\n    Permission.VIEW_FULL_MAP\n  ],\n  [UserRole.ORGANISER]: [\n    Permission.VIEW_EVENTS,\n    Permission.CREATE_EVENT,\n    Permission.EDIT_EVENT,\n    Permission.COMMENT,\n    Permission.SAVE_EVENT,\n    Permission.VIEW_ANALYTICS,\n    Permission.EDIT_PROFILE,\n    Permission.VIEW_FULL_MAP\n  ],\n  [UserRole.ADMIN]: [\n    Permission.VIEW_EVENTS,\n    Permission.CREATE_EVENT,\n    Permission.EDIT_EVENT,\n    Permission.DELETE_EVENT,\n    Permission.COMMENT,\n    Permission.SAVE_EVENT,\n    Permission.MODERATE_CONTENT,\n    Permission.MANAGE_USERS,\n    Permission.VIEW_ANALYTICS,\n    Permission.EDIT_PROFILE,\n    Permission.VIEW_FULL_MAP,\n    Permission.VIEW_LIMITED_MAP\n  ],\n  [UserRole.GUEST]: [\n    Permission.VIEW_EVENTS,\n    Permission.VIEW_LIMITED_MAP\n    // Note: Guests cannot save events, comment, or access personalized features\n    // They must register to become Parent/Organiser for full functionality\n  ],\n  [UserRole.PARTNER]: [\n    Permission.VIEW_EVENTS,\n    Permission.CREATE_EVENT,\n    Permission.EDIT_EVENT,\n    Permission.COMMENT,\n    Permission.SAVE_EVENT,\n    Permission.VIEW_ANALYTICS,\n    Permission.EDIT_PROFILE,\n    Permission.VIEW_FULL_MAP\n  ]\n};\n\n/**\n * Check if a user has a specific permission\n * @param userRole The role of the user\n * @param permission The permission to check\n * @returns boolean indicating if the user has the permission\n */\nexport const hasPermission = (userRole: UserRole, permission: Permission): boolean => {\n  return rolePermissions[userRole]?.includes(permission) || false;\n};\n\n/**\n * Get all permissions for a specific role\n * @param role The user role\n * @returns Array of permissions for the role\n */\nexport const getPermissionsForRole = (role: UserRole): Permission[] => {\n  return rolePermissions[role] || [];\n};\n\n/**\n * Screen access control definitions\n */\nexport const screenAccessControl = {\n  // Admin-only screens\n  AdminDashboard: [UserRole.ADMIN],\n  ReportReview: [UserRole.ADMIN],\n  ModerationQueue: [UserRole.ADMIN],\n  \n  // Organiser screens\n  OrganiserDashboard: [UserRole.ORGANISER, UserRole.ADMIN],\n  \n  // Authenticated user screens\n  Privacy: [UserRole.PARENT, UserRole.ORGANISER, UserRole.ADMIN, UserRole.PARTNER],\n  SubmitEvent: [UserRole.ORGANISER, UserRole.ADMIN, UserRole.PARTNER],\n  \n  // Public screens (accessible by all roles including guests)\n  Home: Object.values(UserRole), // Guests see limited version without personalization\n  Search: Object.values(UserRole), // Guests can search but cannot save results\n  Map: Object.values(UserRole), // Guests see limited map without full location features\n  EventDetail: Object.values(UserRole), // Guests can view but cannot interact (save/comment)\n  \n  // Guest-restricted screens (require registration)\n  Profile: [UserRole.PARENT, UserRole.ORGANISER, UserRole.ADMIN, UserRole.PARTNER],\n  SavedEvents: [UserRole.PARENT, UserRole.ORGANISER, UserRole.ADMIN, UserRole.PARTNER],\n  Comments: [UserRole.PARENT, UserRole.ORGANISER, UserRole.ADMIN, UserRole.PARTNER], // View-only for guests\n};\n\n/**\n * Check if a user role can access a specific screen\n * @param userRole The role of the user\n * @param screenName The name of the screen\n * @returns boolean indicating if the user can access the screen\n */\nexport const canAccessScreen = (userRole: UserRole, screenName: string): boolean => {\n  const allowedRoles = screenAccessControl[screenName as keyof typeof screenAccessControl];\n  return allowedRoles ? allowedRoles.includes(userRole) : false;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}