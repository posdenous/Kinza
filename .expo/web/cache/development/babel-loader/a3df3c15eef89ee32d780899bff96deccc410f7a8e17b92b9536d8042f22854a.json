{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from 'react';\nimport { collection, query, where, getDocs, limit, orderBy } from 'firebase/firestore';\nimport { useFirestoreInstance } from './useFirestoreInstance';\nimport { getAuth } from 'firebase/auth';\nimport { useUserRole } from './useUserRole';\nimport useApiWithRetry from './common/useApiWithRetry';\nexport var useSearch = function useSearch(options) {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    results = _useState2[0],\n    setResults = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var _useFirestoreInstance = useFirestoreInstance(),\n    _useFirestoreInstance2 = _slicedToArray(_useFirestoreInstance, 1),\n    firestore = _useFirestoreInstance2[0];\n  var _useUserRole = useUserRole(),\n    userRole = _useUserRole.userRole,\n    roleLoading = _useUserRole.isLoading;\n  var auth = getAuth();\n  var user = auth.currentUser;\n  var _useApiWithRetry = useApiWithRetry(_asyncToGenerator(function* () {\n      if (!options.query || options.query.length < 2 || !firestore || roleLoading) {\n        return [];\n      }\n      var searchResults = [];\n      var searchQuery = options.query,\n        types = options.types,\n        categories = options.categories,\n        ageRange = options.ageRange,\n        dateRange = options.dateRange,\n        _options$limit = options.limit,\n        resultLimit = _options$limit === void 0 ? 20 : _options$limit,\n        cityId = options.cityId;\n      var normalizedQuery = searchQuery.toLowerCase().trim();\n      var queryStart = normalizedQuery;\n      var queryEnd = normalizedQuery + \"\\uF8FF\";\n      if (!types || types.includes('event')) {\n        var eventsRef = collection(firestore, 'events');\n        var eventsQuery = query(eventsRef, where('cityId', '==', cityId), where('status', '==', 'approved'), where('searchableTitle', '>=', queryStart), where('searchableTitle', '<=', queryEnd), orderBy('searchableTitle'), limit(resultLimit));\n        if (categories && categories.length > 0) {\n          eventsQuery = query(eventsQuery, where('category', 'in', categories));\n        }\n        if (ageRange) {\n          eventsQuery = query(eventsQuery, where('minAge', '<=', ageRange.max), where('maxAge', '>=', ageRange.min));\n        }\n        if (dateRange) {\n          eventsQuery = query(eventsQuery, where('startDate', '>=', dateRange.start), where('startDate', '<=', dateRange.end));\n        }\n        var eventSnapshot = yield getDocs(eventsQuery);\n        eventSnapshot.forEach(function (doc) {\n          var _eventData$startDate, _eventData$venue;\n          var eventData = doc.data();\n          searchResults.push({\n            id: doc.id,\n            type: 'event',\n            title: eventData.title,\n            description: eventData.description,\n            imageUrl: eventData.imageUrl,\n            category: eventData.category,\n            date: (_eventData$startDate = eventData.startDate) == null ? void 0 : _eventData$startDate.toDate(),\n            address: (_eventData$venue = eventData.venue) == null ? void 0 : _eventData$venue.address,\n            ageRange: `${eventData.minAge}-${eventData.maxAge}`,\n            rating: eventData.rating\n          });\n        });\n      }\n      if (!types || types.includes('venue')) {\n        var venuesRef = collection(firestore, 'venues');\n        var venuesQuery = query(venuesRef, where('cityId', '==', cityId), where('searchableName', '>=', queryStart), where('searchableName', '<=', queryEnd), orderBy('searchableName'), limit(resultLimit));\n        if (categories && categories.length > 0) {\n          venuesQuery = query(venuesQuery, where('category', 'in', categories));\n        }\n        var venueSnapshot = yield getDocs(venuesQuery);\n        venueSnapshot.forEach(function (doc) {\n          var venueData = doc.data();\n          searchResults.push({\n            id: doc.id,\n            type: 'venue',\n            title: venueData.name,\n            description: venueData.description,\n            imageUrl: venueData.imageUrl,\n            category: venueData.category,\n            address: venueData.address,\n            distance: venueData.distance,\n            rating: venueData.rating\n          });\n        });\n      }\n      if (userRole === 'admin' && (!types || types.includes('profile'))) {\n        var profilesRef = collection(firestore, 'users');\n        var profilesQuery = query(profilesRef, where('cityId', '==', cityId), where('searchableName', '>=', queryStart), where('searchableName', '<=', queryEnd), orderBy('searchableName'), limit(resultLimit));\n        var profileSnapshot = yield getDocs(profilesQuery);\n        profileSnapshot.forEach(function (doc) {\n          var profileData = doc.data();\n          searchResults.push({\n            id: doc.id,\n            type: 'profile',\n            title: profileData.displayName,\n            description: profileData.bio,\n            imageUrl: profileData.photoURL,\n            category: profileData.role\n          });\n        });\n      }\n      searchResults.sort(function (a, b) {\n        var aTitle = a.title.toLowerCase();\n        var bTitle = b.title.toLowerCase();\n        if (aTitle === normalizedQuery && bTitle !== normalizedQuery) return -1;\n        if (bTitle === normalizedQuery && aTitle !== normalizedQuery) return 1;\n        if (aTitle.startsWith(normalizedQuery) && !bTitle.startsWith(normalizedQuery)) return -1;\n        if (bTitle.startsWith(normalizedQuery) && !aTitle.startsWith(normalizedQuery)) return 1;\n        return aTitle.localeCompare(bTitle);\n      });\n      return searchResults;\n    }), {\n      maxRetries: 2,\n      baseDelay: 500\n    }),\n    searchWithRetry = _useApiWithRetry.execute,\n    isRetrying = _useApiWithRetry.isRetrying;\n  useEffect(function () {\n    var fetchResults = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        if (!options.query || options.query.length < 2 || !firestore || roleLoading) {\n          setResults([]);\n          return;\n        }\n        setLoading(true);\n        setError(null);\n        try {\n          var searchResults = yield searchWithRetry();\n          setResults(searchResults);\n        } catch (err) {\n          console.error('Error searching:', err);\n          setError(err instanceof Error ? err : new Error('An unknown error occurred during search'));\n        } finally {\n          setLoading(false);\n        }\n      });\n      return function fetchResults() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchResults();\n  }, [options, firestore, userRole, roleLoading, searchWithRetry]);\n  return {\n    results: results,\n    loading: loading,\n    error: error\n  };\n};","map":{"version":3,"names":["useState","useEffect","collection","query","where","getDocs","limit","orderBy","useFirestoreInstance","getAuth","useUserRole","useApiWithRetry","useSearch","options","_useState","_useState2","_slicedToArray","results","setResults","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","_useFirestoreInstance","_useFirestoreInstance2","firestore","_useUserRole","userRole","roleLoading","isLoading","auth","user","currentUser","_useApiWithRetry","_asyncToGenerator","length","searchResults","searchQuery","types","categories","ageRange","dateRange","_options$limit","resultLimit","cityId","normalizedQuery","toLowerCase","trim","queryStart","queryEnd","includes","eventsRef","eventsQuery","max","min","start","end","eventSnapshot","forEach","doc","_eventData$startDate","_eventData$venue","eventData","data","push","id","type","title","description","imageUrl","category","date","startDate","toDate","address","venue","minAge","maxAge","rating","venuesRef","venuesQuery","venueSnapshot","venueData","name","distance","profilesRef","profilesQuery","profileSnapshot","profileData","displayName","bio","photoURL","role","sort","a","b","aTitle","bTitle","startsWith","localeCompare","maxRetries","baseDelay","searchWithRetry","execute","isRetrying","fetchResults","_ref2","err","console","Error","apply","arguments"],"sources":["/Users/brianwilliams/Documents/GitHub/Kinza/src/hooks/useSearch.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { collection, query, where, getDocs, limit, orderBy, startAt, endAt, Firestore } from 'firebase/firestore';\nimport { useFirestoreInstance } from './useFirestoreInstance';\nimport { getAuth } from 'firebase/auth';\nimport { useUserRole } from './useUserRole';\nimport useApiWithRetry from './common/useApiWithRetry';\n\nexport type SearchResultType = 'event' | 'venue' | 'profile';\n\nexport interface SearchResult {\n  id: string;\n  type: SearchResultType;\n  title: string;\n  description?: string;\n  imageUrl?: string;\n  category?: string;\n  date?: Date;\n  address?: string;\n  distance?: number; // in km\n  ageRange?: string;\n  rating?: number;\n}\n\ninterface SearchOptions {\n  query: string;\n  types?: SearchResultType[];\n  categories?: string[];\n  ageRange?: { min: number; max: number };\n  dateRange?: { start: Date; end: Date };\n  distance?: number; // in km\n  limit?: number;\n  cityId: string;\n}\n\nexport const useSearch = (options: SearchOptions) => {\n  const [results, setResults] = useState<SearchResult[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<Error | null>(null);\n  const [firestore] = useFirestoreInstance();\n  const { userRole, isLoading: roleLoading } = useUserRole();\n  const auth = getAuth();\n  const user = auth.currentUser;\n\n  // Create retry-enabled search function\n  const { execute: searchWithRetry, isRetrying } = useApiWithRetry(\n    async () => {\n      if (!options.query || options.query.length < 2 || !firestore || roleLoading) {\n        return [];\n      }\n\n      const searchResults: SearchResult[] = [];\n      const { query: searchQuery, types, categories, ageRange, dateRange, limit: resultLimit = 20, cityId } = options;\n\n      // Normalize the search query for better matching\n      const normalizedQuery = searchQuery.toLowerCase().trim();\n      const queryStart = normalizedQuery;\n      const queryEnd = normalizedQuery + '\\uf8ff'; // Unicode character for end of string search\n\n        // Search events\n        if (!types || types.includes('event')) {\n          const eventsRef = collection(firestore, 'events');\n          let eventsQuery = query(\n            eventsRef,\n            where('cityId', '==', cityId), // City scoping rule\n            where('status', '==', 'approved'), // Only show approved events\n            where('searchableTitle', '>=', queryStart),\n            where('searchableTitle', '<=', queryEnd),\n            orderBy('searchableTitle'),\n            limit(resultLimit)\n          );\n\n          // Apply category filter if provided\n          if (categories && categories.length > 0) {\n            eventsQuery = query(eventsQuery, where('category', 'in', categories));\n          }\n\n          // Apply age range filter if provided\n          if (ageRange) {\n            eventsQuery = query(\n              eventsQuery,\n              where('minAge', '<=', ageRange.max),\n              where('maxAge', '>=', ageRange.min)\n            );\n          }\n\n          // Apply date range filter if provided\n          if (dateRange) {\n            eventsQuery = query(\n              eventsQuery,\n              where('startDate', '>=', dateRange.start),\n              where('startDate', '<=', dateRange.end)\n            );\n          }\n\n          const eventSnapshot = await getDocs(eventsQuery);\n          \n          eventSnapshot.forEach((doc) => {\n            const eventData = doc.data();\n            searchResults.push({\n              id: doc.id,\n              type: 'event',\n              title: eventData.title,\n              description: eventData.description,\n              imageUrl: eventData.imageUrl,\n              category: eventData.category,\n              date: eventData.startDate?.toDate(),\n              address: eventData.venue?.address,\n              ageRange: `${eventData.minAge}-${eventData.maxAge}`,\n              rating: eventData.rating\n            });\n          });\n        }\n\n        // Search venues\n        if (!types || types.includes('venue')) {\n          const venuesRef = collection(firestore, 'venues');\n          let venuesQuery = query(\n            venuesRef,\n            where('cityId', '==', cityId), // City scoping rule\n            where('searchableName', '>=', queryStart),\n            where('searchableName', '<=', queryEnd),\n            orderBy('searchableName'),\n            limit(resultLimit)\n          );\n\n          // Apply category filter if provided\n          if (categories && categories.length > 0) {\n            venuesQuery = query(venuesQuery, where('category', 'in', categories));\n          }\n\n          const venueSnapshot = await getDocs(venuesQuery);\n          \n          venueSnapshot.forEach((doc) => {\n            const venueData = doc.data();\n            searchResults.push({\n              id: doc.id,\n              type: 'venue',\n              title: venueData.name,\n              description: venueData.description,\n              imageUrl: venueData.imageUrl,\n              category: venueData.category,\n              address: venueData.address,\n              distance: venueData.distance,\n              rating: venueData.rating\n            });\n          });\n        }\n\n        // Search profiles (only for admin users)\n        if ((userRole === 'admin') && (!types || types.includes('profile'))) {\n          const profilesRef = collection(firestore, 'users');\n          let profilesQuery = query(\n            profilesRef,\n            where('cityId', '==', cityId), // City scoping rule\n            where('searchableName', '>=', queryStart),\n            where('searchableName', '<=', queryEnd),\n            orderBy('searchableName'),\n            limit(resultLimit)\n          );\n\n          const profileSnapshot = await getDocs(profilesQuery);\n          \n          profileSnapshot.forEach((doc) => {\n            const profileData = doc.data();\n            searchResults.push({\n              id: doc.id,\n              type: 'profile',\n              title: profileData.displayName,\n              description: profileData.bio,\n              imageUrl: profileData.photoURL,\n              category: profileData.role\n            });\n          });\n        }\n\n        // Sort results by relevance (exact matches first, then partial matches)\n        searchResults.sort((a, b) => {\n          const aTitle = a.title.toLowerCase();\n          const bTitle = b.title.toLowerCase();\n          \n          if (aTitle === normalizedQuery && bTitle !== normalizedQuery) return -1;\n          if (bTitle === normalizedQuery && aTitle !== normalizedQuery) return 1;\n          \n          if (aTitle.startsWith(normalizedQuery) && !bTitle.startsWith(normalizedQuery)) return -1;\n          if (bTitle.startsWith(normalizedQuery) && !aTitle.startsWith(normalizedQuery)) return 1;\n          \n          return aTitle.localeCompare(bTitle);\n        });\n\n      return searchResults;\n    },\n    { maxRetries: 2, baseDelay: 500 } // Shorter retry for search\n  );\n\n  useEffect(() => {\n    const fetchResults = async () => {\n      if (!options.query || options.query.length < 2 || !firestore || roleLoading) {\n        setResults([]);\n        return;\n      }\n\n      setLoading(true);\n      setError(null);\n\n      try {\n        const searchResults = await searchWithRetry();\n        setResults(searchResults);\n      } catch (err) {\n        console.error('Error searching:', err);\n        setError(err instanceof Error ? err : new Error('An unknown error occurred during search'));\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchResults();\n  }, [options, firestore, userRole, roleLoading, searchWithRetry]);\n\n  return { results, loading, error };\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,UAAU,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,OAAO,QAAmC,oBAAoB;AACjH,SAASC,oBAAoB,QAAQ,wBAAwB;AAC7D,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,WAAW,QAAQ,eAAe;AAC3C,OAAOC,eAAe,MAAM,0BAA0B;AA6BtD,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAIC,OAAsB,EAAK;EACnD,IAAAC,SAAA,GAA8Bd,QAAQ,CAAiB,EAAE,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnDG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAA8BnB,QAAQ,CAAU,KAAK,CAAC;IAAAoB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA/CE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAAG,UAAA,GAA0BvB,QAAQ,CAAe,IAAI,CAAC;IAAAwB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA/CE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACtB,IAAAG,qBAAA,GAAoBnB,oBAAoB,CAAC,CAAC;IAAAoB,sBAAA,GAAAZ,cAAA,CAAAW,qBAAA;IAAnCE,SAAS,GAAAD,sBAAA;EAChB,IAAAE,YAAA,GAA6CpB,WAAW,CAAC,CAAC;IAAlDqB,QAAQ,GAAAD,YAAA,CAARC,QAAQ;IAAaC,WAAW,GAAAF,YAAA,CAAtBG,SAAS;EAC3B,IAAMC,IAAI,GAAGzB,OAAO,CAAC,CAAC;EACtB,IAAM0B,IAAI,GAAGD,IAAI,CAACE,WAAW;EAG7B,IAAAC,gBAAA,GAAiD1B,eAAe,CAAA2B,iBAAA,CAC9D,aAAY;MACV,IAAI,CAACzB,OAAO,CAACV,KAAK,IAAIU,OAAO,CAACV,KAAK,CAACoC,MAAM,GAAG,CAAC,IAAI,CAACV,SAAS,IAAIG,WAAW,EAAE;QAC3E,OAAO,EAAE;MACX;MAEA,IAAMQ,aAA6B,GAAG,EAAE;MACxC,IAAeC,WAAW,GAA8E5B,OAAO,CAAvGV,KAAK;QAAeuC,KAAK,GAAuE7B,OAAO,CAAnF6B,KAAK;QAAEC,UAAU,GAA2D9B,OAAO,CAA5E8B,UAAU;QAAEC,QAAQ,GAAiD/B,OAAO,CAAhE+B,QAAQ;QAAEC,SAAS,GAAsChC,OAAO,CAAtDgC,SAAS;QAAAC,cAAA,GAAsCjC,OAAO,CAA3CP,KAAK;QAAEyC,WAAW,GAAAD,cAAA,cAAG,EAAE,GAAAA,cAAA;QAAEE,MAAM,GAAKnC,OAAO,CAAlBmC,MAAM;MAGnG,IAAMC,eAAe,GAAGR,WAAW,CAACS,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;MACxD,IAAMC,UAAU,GAAGH,eAAe;MAClC,IAAMI,QAAQ,GAAGJ,eAAe,GAAG,QAAQ;MAGzC,IAAI,CAACP,KAAK,IAAIA,KAAK,CAACY,QAAQ,CAAC,OAAO,CAAC,EAAE;QACrC,IAAMC,SAAS,GAAGrD,UAAU,CAAC2B,SAAS,EAAE,QAAQ,CAAC;QACjD,IAAI2B,WAAW,GAAGrD,KAAK,CACrBoD,SAAS,EACTnD,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE4C,MAAM,CAAC,EAC7B5C,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,UAAU,CAAC,EACjCA,KAAK,CAAC,iBAAiB,EAAE,IAAI,EAAEgD,UAAU,CAAC,EAC1ChD,KAAK,CAAC,iBAAiB,EAAE,IAAI,EAAEiD,QAAQ,CAAC,EACxC9C,OAAO,CAAC,iBAAiB,CAAC,EAC1BD,KAAK,CAACyC,WAAW,CACnB,CAAC;QAGD,IAAIJ,UAAU,IAAIA,UAAU,CAACJ,MAAM,GAAG,CAAC,EAAE;UACvCiB,WAAW,GAAGrD,KAAK,CAACqD,WAAW,EAAEpD,KAAK,CAAC,UAAU,EAAE,IAAI,EAAEuC,UAAU,CAAC,CAAC;QACvE;QAGA,IAAIC,QAAQ,EAAE;UACZY,WAAW,GAAGrD,KAAK,CACjBqD,WAAW,EACXpD,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAEwC,QAAQ,CAACa,GAAG,CAAC,EACnCrD,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAEwC,QAAQ,CAACc,GAAG,CACpC,CAAC;QACH;QAGA,IAAIb,SAAS,EAAE;UACbW,WAAW,GAAGrD,KAAK,CACjBqD,WAAW,EACXpD,KAAK,CAAC,WAAW,EAAE,IAAI,EAAEyC,SAAS,CAACc,KAAK,CAAC,EACzCvD,KAAK,CAAC,WAAW,EAAE,IAAI,EAAEyC,SAAS,CAACe,GAAG,CACxC,CAAC;QACH;QAEA,IAAMC,aAAa,SAASxD,OAAO,CAACmD,WAAW,CAAC;QAEhDK,aAAa,CAACC,OAAO,CAAC,UAACC,GAAG,EAAK;UAAA,IAAAC,oBAAA,EAAAC,gBAAA;UAC7B,IAAMC,SAAS,GAAGH,GAAG,CAACI,IAAI,CAAC,CAAC;UAC5B3B,aAAa,CAAC4B,IAAI,CAAC;YACjBC,EAAE,EAAEN,GAAG,CAACM,EAAE;YACVC,IAAI,EAAE,OAAO;YACbC,KAAK,EAAEL,SAAS,CAACK,KAAK;YACtBC,WAAW,EAAEN,SAAS,CAACM,WAAW;YAClCC,QAAQ,EAAEP,SAAS,CAACO,QAAQ;YAC5BC,QAAQ,EAAER,SAAS,CAACQ,QAAQ;YAC5BC,IAAI,GAAAX,oBAAA,GAAEE,SAAS,CAACU,SAAS,qBAAnBZ,oBAAA,CAAqBa,MAAM,CAAC,CAAC;YACnCC,OAAO,GAAAb,gBAAA,GAAEC,SAAS,CAACa,KAAK,qBAAfd,gBAAA,CAAiBa,OAAO;YACjClC,QAAQ,EAAE,GAAGsB,SAAS,CAACc,MAAM,IAAId,SAAS,CAACe,MAAM,EAAE;YACnDC,MAAM,EAAEhB,SAAS,CAACgB;UACpB,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ;MAGA,IAAI,CAACxC,KAAK,IAAIA,KAAK,CAACY,QAAQ,CAAC,OAAO,CAAC,EAAE;QACrC,IAAM6B,SAAS,GAAGjF,UAAU,CAAC2B,SAAS,EAAE,QAAQ,CAAC;QACjD,IAAIuD,WAAW,GAAGjF,KAAK,CACrBgF,SAAS,EACT/E,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE4C,MAAM,CAAC,EAC7B5C,KAAK,CAAC,gBAAgB,EAAE,IAAI,EAAEgD,UAAU,CAAC,EACzChD,KAAK,CAAC,gBAAgB,EAAE,IAAI,EAAEiD,QAAQ,CAAC,EACvC9C,OAAO,CAAC,gBAAgB,CAAC,EACzBD,KAAK,CAACyC,WAAW,CACnB,CAAC;QAGD,IAAIJ,UAAU,IAAIA,UAAU,CAACJ,MAAM,GAAG,CAAC,EAAE;UACvC6C,WAAW,GAAGjF,KAAK,CAACiF,WAAW,EAAEhF,KAAK,CAAC,UAAU,EAAE,IAAI,EAAEuC,UAAU,CAAC,CAAC;QACvE;QAEA,IAAM0C,aAAa,SAAShF,OAAO,CAAC+E,WAAW,CAAC;QAEhDC,aAAa,CAACvB,OAAO,CAAC,UAACC,GAAG,EAAK;UAC7B,IAAMuB,SAAS,GAAGvB,GAAG,CAACI,IAAI,CAAC,CAAC;UAC5B3B,aAAa,CAAC4B,IAAI,CAAC;YACjBC,EAAE,EAAEN,GAAG,CAACM,EAAE;YACVC,IAAI,EAAE,OAAO;YACbC,KAAK,EAAEe,SAAS,CAACC,IAAI;YACrBf,WAAW,EAAEc,SAAS,CAACd,WAAW;YAClCC,QAAQ,EAAEa,SAAS,CAACb,QAAQ;YAC5BC,QAAQ,EAAEY,SAAS,CAACZ,QAAQ;YAC5BI,OAAO,EAAEQ,SAAS,CAACR,OAAO;YAC1BU,QAAQ,EAAEF,SAAS,CAACE,QAAQ;YAC5BN,MAAM,EAAEI,SAAS,CAACJ;UACpB,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ;MAGA,IAAKnD,QAAQ,KAAK,OAAO,KAAM,CAACW,KAAK,IAAIA,KAAK,CAACY,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE;QACnE,IAAMmC,WAAW,GAAGvF,UAAU,CAAC2B,SAAS,EAAE,OAAO,CAAC;QAClD,IAAI6D,aAAa,GAAGvF,KAAK,CACvBsF,WAAW,EACXrF,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE4C,MAAM,CAAC,EAC7B5C,KAAK,CAAC,gBAAgB,EAAE,IAAI,EAAEgD,UAAU,CAAC,EACzChD,KAAK,CAAC,gBAAgB,EAAE,IAAI,EAAEiD,QAAQ,CAAC,EACvC9C,OAAO,CAAC,gBAAgB,CAAC,EACzBD,KAAK,CAACyC,WAAW,CACnB,CAAC;QAED,IAAM4C,eAAe,SAAStF,OAAO,CAACqF,aAAa,CAAC;QAEpDC,eAAe,CAAC7B,OAAO,CAAC,UAACC,GAAG,EAAK;UAC/B,IAAM6B,WAAW,GAAG7B,GAAG,CAACI,IAAI,CAAC,CAAC;UAC9B3B,aAAa,CAAC4B,IAAI,CAAC;YACjBC,EAAE,EAAEN,GAAG,CAACM,EAAE;YACVC,IAAI,EAAE,SAAS;YACfC,KAAK,EAAEqB,WAAW,CAACC,WAAW;YAC9BrB,WAAW,EAAEoB,WAAW,CAACE,GAAG;YAC5BrB,QAAQ,EAAEmB,WAAW,CAACG,QAAQ;YAC9BrB,QAAQ,EAAEkB,WAAW,CAACI;UACxB,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ;MAGAxD,aAAa,CAACyD,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC,EAAK;QAC3B,IAAMC,MAAM,GAAGF,CAAC,CAAC3B,KAAK,CAACrB,WAAW,CAAC,CAAC;QACpC,IAAMmD,MAAM,GAAGF,CAAC,CAAC5B,KAAK,CAACrB,WAAW,CAAC,CAAC;QAEpC,IAAIkD,MAAM,KAAKnD,eAAe,IAAIoD,MAAM,KAAKpD,eAAe,EAAE,OAAO,CAAC,CAAC;QACvE,IAAIoD,MAAM,KAAKpD,eAAe,IAAImD,MAAM,KAAKnD,eAAe,EAAE,OAAO,CAAC;QAEtE,IAAImD,MAAM,CAACE,UAAU,CAACrD,eAAe,CAAC,IAAI,CAACoD,MAAM,CAACC,UAAU,CAACrD,eAAe,CAAC,EAAE,OAAO,CAAC,CAAC;QACxF,IAAIoD,MAAM,CAACC,UAAU,CAACrD,eAAe,CAAC,IAAI,CAACmD,MAAM,CAACE,UAAU,CAACrD,eAAe,CAAC,EAAE,OAAO,CAAC;QAEvF,OAAOmD,MAAM,CAACG,aAAa,CAACF,MAAM,CAAC;MACrC,CAAC,CAAC;MAEJ,OAAO7D,aAAa;IACtB,CAAC,GACD;MAAEgE,UAAU,EAAE,CAAC;MAAEC,SAAS,EAAE;IAAI,CAClC,CAAC;IApJgBC,eAAe,GAAArE,gBAAA,CAAxBsE,OAAO;IAAmBC,UAAU,GAAAvE,gBAAA,CAAVuE,UAAU;EAsJ5C3G,SAAS,CAAC,YAAM;IACd,IAAM4G,YAAY;MAAA,IAAAC,KAAA,GAAAxE,iBAAA,CAAG,aAAY;QAC/B,IAAI,CAACzB,OAAO,CAACV,KAAK,IAAIU,OAAO,CAACV,KAAK,CAACoC,MAAM,GAAG,CAAC,IAAI,CAACV,SAAS,IAAIG,WAAW,EAAE;UAC3Ed,UAAU,CAAC,EAAE,CAAC;UACd;QACF;QAEAI,UAAU,CAAC,IAAI,CAAC;QAChBI,QAAQ,CAAC,IAAI,CAAC;QAEd,IAAI;UACF,IAAMc,aAAa,SAASkE,eAAe,CAAC,CAAC;UAC7CxF,UAAU,CAACsB,aAAa,CAAC;QAC3B,CAAC,CAAC,OAAOuE,GAAG,EAAE;UACZC,OAAO,CAACvF,KAAK,CAAC,kBAAkB,EAAEsF,GAAG,CAAC;UACtCrF,QAAQ,CAACqF,GAAG,YAAYE,KAAK,GAAGF,GAAG,GAAG,IAAIE,KAAK,CAAC,yCAAyC,CAAC,CAAC;QAC7F,CAAC,SAAS;UACR3F,UAAU,CAAC,KAAK,CAAC;QACnB;MACF,CAAC;MAAA,gBAlBKuF,YAAYA,CAAA;QAAA,OAAAC,KAAA,CAAAI,KAAA,OAAAC,SAAA;MAAA;IAAA,GAkBjB;IAEDN,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAAChG,OAAO,EAAEgB,SAAS,EAAEE,QAAQ,EAAEC,WAAW,EAAE0E,eAAe,CAAC,CAAC;EAEhE,OAAO;IAAEzF,OAAO,EAAPA,OAAO;IAAEI,OAAO,EAAPA,OAAO;IAAEI,KAAK,EAALA;EAAM,CAAC;AACpC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}