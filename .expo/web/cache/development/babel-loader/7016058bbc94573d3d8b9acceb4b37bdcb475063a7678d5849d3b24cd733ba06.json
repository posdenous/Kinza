{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { collection, query, where, getDocs, limit, orderBy } from 'firebase/firestore';\nimport { useFirestoreInstance } from './useFirestoreInstance';\nimport { getAuth } from 'firebase/auth';\nimport { useUserRole } from './useUserRole';\nexport const useSearch = options => {\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [firestore] = useFirestoreInstance();\n  const {\n    userRole,\n    isLoading: roleLoading\n  } = useUserRole();\n  const auth = getAuth();\n  const user = auth.currentUser;\n  useEffect(() => {\n    const fetchResults = async () => {\n      if (!options.query || options.query.length < 2 || !firestore || roleLoading) {\n        return;\n      }\n      setLoading(true);\n      setError(null);\n      try {\n        const searchResults = [];\n        const {\n          query: searchQuery,\n          types,\n          categories,\n          ageRange,\n          dateRange,\n          limit: resultLimit = 20,\n          cityId\n        } = options;\n        const normalizedQuery = searchQuery.toLowerCase().trim();\n        const queryStart = normalizedQuery;\n        const queryEnd = normalizedQuery + '\\uf8ff';\n        if (!types || types.includes('event')) {\n          const eventsRef = collection(firestore, 'events');\n          let eventsQuery = query(eventsRef, where('cityId', '==', cityId), where('status', '==', 'approved'), where('searchableTitle', '>=', queryStart), where('searchableTitle', '<=', queryEnd), orderBy('searchableTitle'), limit(resultLimit));\n          if (categories && categories.length > 0) {\n            eventsQuery = query(eventsQuery, where('category', 'in', categories));\n          }\n          if (ageRange) {\n            eventsQuery = query(eventsQuery, where('minAge', '<=', ageRange.max), where('maxAge', '>=', ageRange.min));\n          }\n          if (dateRange) {\n            eventsQuery = query(eventsQuery, where('startDate', '>=', dateRange.start), where('startDate', '<=', dateRange.end));\n          }\n          const eventSnapshot = await getDocs(eventsQuery);\n          eventSnapshot.forEach(doc => {\n            const eventData = doc.data();\n            searchResults.push({\n              id: doc.id,\n              type: 'event',\n              title: eventData.title,\n              description: eventData.description,\n              imageUrl: eventData.imageUrl,\n              category: eventData.category,\n              date: eventData.startDate?.toDate(),\n              address: eventData.venue?.address,\n              ageRange: `${eventData.minAge}-${eventData.maxAge}`,\n              rating: eventData.rating\n            });\n          });\n        }\n        if (!types || types.includes('venue')) {\n          const venuesRef = collection(firestore, 'venues');\n          let venuesQuery = query(venuesRef, where('cityId', '==', cityId), where('searchableName', '>=', queryStart), where('searchableName', '<=', queryEnd), orderBy('searchableName'), limit(resultLimit));\n          if (categories && categories.length > 0) {\n            venuesQuery = query(venuesQuery, where('category', 'in', categories));\n          }\n          const venueSnapshot = await getDocs(venuesQuery);\n          venueSnapshot.forEach(doc => {\n            const venueData = doc.data();\n            searchResults.push({\n              id: doc.id,\n              type: 'venue',\n              title: venueData.name,\n              description: venueData.description,\n              imageUrl: venueData.imageUrl,\n              category: venueData.category,\n              address: venueData.address,\n              distance: venueData.distance,\n              rating: venueData.rating\n            });\n          });\n        }\n        if (userRole === 'admin' && (!types || types.includes('profile'))) {\n          const profilesRef = collection(firestore, 'users');\n          let profilesQuery = query(profilesRef, where('cityId', '==', cityId), where('searchableName', '>=', queryStart), where('searchableName', '<=', queryEnd), orderBy('searchableName'), limit(resultLimit));\n          const profileSnapshot = await getDocs(profilesQuery);\n          profileSnapshot.forEach(doc => {\n            const profileData = doc.data();\n            searchResults.push({\n              id: doc.id,\n              type: 'profile',\n              title: profileData.displayName,\n              description: profileData.bio,\n              imageUrl: profileData.photoURL,\n              category: profileData.role\n            });\n          });\n        }\n        searchResults.sort((a, b) => {\n          const aTitle = a.title.toLowerCase();\n          const bTitle = b.title.toLowerCase();\n          if (aTitle === normalizedQuery && bTitle !== normalizedQuery) return -1;\n          if (bTitle === normalizedQuery && aTitle !== normalizedQuery) return 1;\n          if (aTitle.startsWith(normalizedQuery) && !bTitle.startsWith(normalizedQuery)) return -1;\n          if (bTitle.startsWith(normalizedQuery) && !aTitle.startsWith(normalizedQuery)) return 1;\n          return aTitle.localeCompare(bTitle);\n        });\n        setResults(searchResults);\n      } catch (err) {\n        console.error('Error searching:', err);\n        setError(err instanceof Error ? err : new Error('An unknown error occurred during search'));\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchResults();\n  }, [options, firestore, userRole, roleLoading]);\n  return {\n    results,\n    loading,\n    error\n  };\n};","map":{"version":3,"names":["useState","useEffect","collection","query","where","getDocs","limit","orderBy","useFirestoreInstance","getAuth","useUserRole","useSearch","options","results","setResults","loading","setLoading","error","setError","firestore","userRole","isLoading","roleLoading","auth","user","currentUser","fetchResults","length","searchResults","searchQuery","types","categories","ageRange","dateRange","resultLimit","cityId","normalizedQuery","toLowerCase","trim","queryStart","queryEnd","includes","eventsRef","eventsQuery","max","min","start","end","eventSnapshot","forEach","doc","eventData","data","push","id","type","title","description","imageUrl","category","date","startDate","toDate","address","venue","minAge","maxAge","rating","venuesRef","venuesQuery","venueSnapshot","venueData","name","distance","profilesRef","profilesQuery","profileSnapshot","profileData","displayName","bio","photoURL","role","sort","a","b","aTitle","bTitle","startsWith","localeCompare","err","console","Error"],"sources":["/Users/brianwilliams/Documents/GitHub/Kinza/src/hooks/useSearch.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { collection, query, where, getDocs, limit, orderBy, startAt, endAt, Firestore } from 'firebase/firestore';\nimport { useFirestoreInstance } from './useFirestoreInstance';\nimport { getAuth } from 'firebase/auth';\nimport { useUserRole } from './useUserRole';\n\nexport type SearchResultType = 'event' | 'venue' | 'profile';\n\nexport interface SearchResult {\n  id: string;\n  type: SearchResultType;\n  title: string;\n  description?: string;\n  imageUrl?: string;\n  category?: string;\n  date?: Date;\n  address?: string;\n  distance?: number; // in km\n  ageRange?: string;\n  rating?: number;\n}\n\ninterface SearchOptions {\n  query: string;\n  types?: SearchResultType[];\n  categories?: string[];\n  ageRange?: { min: number; max: number };\n  dateRange?: { start: Date; end: Date };\n  distance?: number; // in km\n  limit?: number;\n  cityId: string;\n}\n\nexport const useSearch = (options: SearchOptions) => {\n  const [results, setResults] = useState<SearchResult[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<Error | null>(null);\n  const [firestore] = useFirestoreInstance();\n  const { userRole, isLoading: roleLoading } = useUserRole();\n  const auth = getAuth();\n  const user = auth.currentUser;\n\n  useEffect(() => {\n    const fetchResults = async () => {\n      if (!options.query || options.query.length < 2 || !firestore || roleLoading) {\n        return;\n      }\n\n      setLoading(true);\n      setError(null);\n\n      try {\n        const searchResults: SearchResult[] = [];\n        const { query: searchQuery, types, categories, ageRange, dateRange, limit: resultLimit = 20, cityId } = options;\n\n        // Normalize the search query for better matching\n        const normalizedQuery = searchQuery.toLowerCase().trim();\n        const queryStart = normalizedQuery;\n        const queryEnd = normalizedQuery + '\\uf8ff'; // Unicode character for end of string search\n\n        // Search events\n        if (!types || types.includes('event')) {\n          const eventsRef = collection(firestore, 'events');\n          let eventsQuery = query(\n            eventsRef,\n            where('cityId', '==', cityId), // City scoping rule\n            where('status', '==', 'approved'), // Only show approved events\n            where('searchableTitle', '>=', queryStart),\n            where('searchableTitle', '<=', queryEnd),\n            orderBy('searchableTitle'),\n            limit(resultLimit)\n          );\n\n          // Apply category filter if provided\n          if (categories && categories.length > 0) {\n            eventsQuery = query(eventsQuery, where('category', 'in', categories));\n          }\n\n          // Apply age range filter if provided\n          if (ageRange) {\n            eventsQuery = query(\n              eventsQuery,\n              where('minAge', '<=', ageRange.max),\n              where('maxAge', '>=', ageRange.min)\n            );\n          }\n\n          // Apply date range filter if provided\n          if (dateRange) {\n            eventsQuery = query(\n              eventsQuery,\n              where('startDate', '>=', dateRange.start),\n              where('startDate', '<=', dateRange.end)\n            );\n          }\n\n          const eventSnapshot = await getDocs(eventsQuery);\n          \n          eventSnapshot.forEach((doc) => {\n            const eventData = doc.data();\n            searchResults.push({\n              id: doc.id,\n              type: 'event',\n              title: eventData.title,\n              description: eventData.description,\n              imageUrl: eventData.imageUrl,\n              category: eventData.category,\n              date: eventData.startDate?.toDate(),\n              address: eventData.venue?.address,\n              ageRange: `${eventData.minAge}-${eventData.maxAge}`,\n              rating: eventData.rating\n            });\n          });\n        }\n\n        // Search venues\n        if (!types || types.includes('venue')) {\n          const venuesRef = collection(firestore, 'venues');\n          let venuesQuery = query(\n            venuesRef,\n            where('cityId', '==', cityId), // City scoping rule\n            where('searchableName', '>=', queryStart),\n            where('searchableName', '<=', queryEnd),\n            orderBy('searchableName'),\n            limit(resultLimit)\n          );\n\n          // Apply category filter if provided\n          if (categories && categories.length > 0) {\n            venuesQuery = query(venuesQuery, where('category', 'in', categories));\n          }\n\n          const venueSnapshot = await getDocs(venuesQuery);\n          \n          venueSnapshot.forEach((doc) => {\n            const venueData = doc.data();\n            searchResults.push({\n              id: doc.id,\n              type: 'venue',\n              title: venueData.name,\n              description: venueData.description,\n              imageUrl: venueData.imageUrl,\n              category: venueData.category,\n              address: venueData.address,\n              distance: venueData.distance,\n              rating: venueData.rating\n            });\n          });\n        }\n\n        // Search profiles (only for admin users)\n        if ((userRole === 'admin') && (!types || types.includes('profile'))) {\n          const profilesRef = collection(firestore, 'users');\n          let profilesQuery = query(\n            profilesRef,\n            where('cityId', '==', cityId), // City scoping rule\n            where('searchableName', '>=', queryStart),\n            where('searchableName', '<=', queryEnd),\n            orderBy('searchableName'),\n            limit(resultLimit)\n          );\n\n          const profileSnapshot = await getDocs(profilesQuery);\n          \n          profileSnapshot.forEach((doc) => {\n            const profileData = doc.data();\n            searchResults.push({\n              id: doc.id,\n              type: 'profile',\n              title: profileData.displayName,\n              description: profileData.bio,\n              imageUrl: profileData.photoURL,\n              category: profileData.role\n            });\n          });\n        }\n\n        // Sort results by relevance (exact matches first, then partial matches)\n        searchResults.sort((a, b) => {\n          const aTitle = a.title.toLowerCase();\n          const bTitle = b.title.toLowerCase();\n          \n          if (aTitle === normalizedQuery && bTitle !== normalizedQuery) return -1;\n          if (bTitle === normalizedQuery && aTitle !== normalizedQuery) return 1;\n          \n          if (aTitle.startsWith(normalizedQuery) && !bTitle.startsWith(normalizedQuery)) return -1;\n          if (bTitle.startsWith(normalizedQuery) && !aTitle.startsWith(normalizedQuery)) return 1;\n          \n          return aTitle.localeCompare(bTitle);\n        });\n\n        setResults(searchResults);\n      } catch (err) {\n        console.error('Error searching:', err);\n        setError(err instanceof Error ? err : new Error('An unknown error occurred during search'));\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchResults();\n  }, [options, firestore, userRole, roleLoading]);\n\n  return { results, loading, error };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}